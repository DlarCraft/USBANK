"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/savings/page",{

/***/ "(app-pages-browser)/./src/components/CountingNumber.tsx":
/*!*******************************************!*\
  !*** ./src/components/CountingNumber.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CountingNumber)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction CountingNumber(param) {\n    let { value, duration = 1000, formatAsCurrency = false } = param;\n    _s();\n    const [displayValue, setDisplayValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(value);\n    const [isHydrated, setIsHydrated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Ensure component is hydrated on client\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CountingNumber.useEffect\": ()=>{\n            setIsHydrated(true);\n        }\n    }[\"CountingNumber.useEffect\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CountingNumber.useEffect\": ()=>{\n            if (!isHydrated) return; // Skip animation on server\n            // For smooth animation after hydration\n            const startValue = displayValue;\n            const endValue = value;\n            const difference = endValue - startValue;\n            if (Math.abs(difference) < 0.01) {\n                setDisplayValue(endValue);\n                return;\n            }\n            const startTime = Date.now();\n            const updateValue = {\n                \"CountingNumber.useEffect.updateValue\": ()=>{\n                    const currentTime = Date.now();\n                    const elapsed = currentTime - startTime;\n                    const progress = Math.min(elapsed / duration, 1);\n                    const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n                    const currentValue = startValue + difference * easeOutQuart;\n                    setDisplayValue(currentValue);\n                    if (progress < 1) {\n                        requestAnimationFrame(updateValue);\n                    } else {\n                        setDisplayValue(endValue);\n                    }\n                }\n            }[\"CountingNumber.useEffect.updateValue\"];\n            const animationId = requestAnimationFrame(updateValue);\n            return ({\n                \"CountingNumber.useEffect\": ()=>cancelAnimationFrame(animationId)\n            })[\"CountingNumber.useEffect\"];\n        }\n    }[\"CountingNumber.useEffect\"], [\n        isHydrated,\n        value,\n        duration\n    ]);\n    const formatNumber = (num)=>{\n        if (formatAsCurrency) {\n            return new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n            }).format(num);\n        }\n        return num.toLocaleString('en-US', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        });\n    };\n    // On first render (SSR), always show the value prop to avoid hydration mismatch\n    if (!isHydrated) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n            children: formatNumber(value)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\HP\\\\Desktop\\\\test-project\\\\src\\\\components\\\\CountingNumber.tsx\",\n            lineNumber: 69,\n            columnNumber: 12\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n        children: formatNumber(displayValue)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\HP\\\\Desktop\\\\test-project\\\\src\\\\components\\\\CountingNumber.tsx\",\n        lineNumber: 71,\n        columnNumber: 10\n    }, this);\n}\n_s(CountingNumber, \"KSpVfdyaFkxtn45rbNDUaYKZJM8=\");\n_c = CountingNumber;\nvar _c;\n$RefreshReg$(_c, \"CountingNumber\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NvdW50aW5nTnVtYmVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFa0Q7QUFRbkMsU0FBU0csZUFBZSxLQUlqQjtRQUppQixFQUNyQ0MsS0FBSyxFQUNMQyxXQUFXLElBQUksRUFDZkMsbUJBQW1CLEtBQUssRUFDSixHQUppQjs7SUFLckMsTUFBTSxDQUFDQyxjQUFjQyxnQkFBZ0IsR0FBR1AsK0NBQVFBLENBQUNHO0lBQ2pELE1BQU0sQ0FBQ0ssWUFBWUMsY0FBYyxHQUFHVCwrQ0FBUUEsQ0FBQztJQUU3Qyx5Q0FBeUM7SUFDekNDLGdEQUFTQTtvQ0FBQztZQUNSUSxjQUFjO1FBQ2hCO21DQUFHLEVBQUU7SUFFTFIsZ0RBQVNBO29DQUFDO1lBQ1IsSUFBSSxDQUFDTyxZQUFZLFFBQVEsMkJBQTJCO1lBQ3BELHVDQUF1QztZQUN2QyxNQUFNRSxhQUFhSjtZQUNuQixNQUFNSyxXQUFXUjtZQUNqQixNQUFNUyxhQUFhRCxXQUFXRDtZQUM5QixJQUFJRyxLQUFLQyxHQUFHLENBQUNGLGNBQWMsTUFBTTtnQkFDL0JMLGdCQUFnQkk7Z0JBQ2hCO1lBQ0Y7WUFDQSxNQUFNSSxZQUFZQyxLQUFLQyxHQUFHO1lBQzFCLE1BQU1DO3dEQUFjO29CQUNsQixNQUFNQyxjQUFjSCxLQUFLQyxHQUFHO29CQUM1QixNQUFNRyxVQUFVRCxjQUFjSjtvQkFDOUIsTUFBTU0sV0FBV1IsS0FBS1MsR0FBRyxDQUFDRixVQUFVaEIsVUFBVTtvQkFDOUMsTUFBTW1CLGVBQWUsSUFBSVYsS0FBS1csR0FBRyxDQUFDLElBQUlILFVBQVU7b0JBQ2hELE1BQU1JLGVBQWVmLGFBQWNFLGFBQWFXO29CQUNoRGhCLGdCQUFnQmtCO29CQUNoQixJQUFJSixXQUFXLEdBQUc7d0JBQ2hCSyxzQkFBc0JSO29CQUN4QixPQUFPO3dCQUNMWCxnQkFBZ0JJO29CQUNsQjtnQkFDRjs7WUFDQSxNQUFNZ0IsY0FBY0Qsc0JBQXNCUjtZQUMxQzs0Q0FBTyxJQUFNVSxxQkFBcUJEOztRQUNwQzttQ0FBRztRQUFDbkI7UUFBWUw7UUFBT0M7S0FBUztJQUVoQyxNQUFNeUIsZUFBZSxDQUFDQztRQUNwQixJQUFJekIsa0JBQWtCO1lBQ3BCLE9BQU8sSUFBSTBCLEtBQUtDLFlBQVksQ0FBQyxTQUFTO2dCQUNwQ0MsT0FBTztnQkFDUEMsVUFBVTtnQkFDVkMsdUJBQXVCO2dCQUN2QkMsdUJBQXVCO1lBQ3pCLEdBQUdDLE1BQU0sQ0FBQ1A7UUFDWjtRQUNBLE9BQU9BLElBQUlRLGNBQWMsQ0FBQyxTQUFTO1lBQ2pDSCx1QkFBdUI7WUFDdkJDLHVCQUF1QjtRQUN6QjtJQUNGO0lBRUEsZ0ZBQWdGO0lBQ2hGLElBQUksQ0FBQzVCLFlBQVk7UUFDZixxQkFBTyw4REFBQytCO3NCQUFNVixhQUFhMUI7Ozs7OztJQUM3QjtJQUNBLHFCQUFPLDhEQUFDb0M7a0JBQU1WLGFBQWF2Qjs7Ozs7O0FBQzdCO0dBN0R3Qko7S0FBQUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcSFBcXERlc2t0b3BcXHRlc3QtcHJvamVjdFxcc3JjXFxjb21wb25lbnRzXFxDb3VudGluZ051bWJlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xyXG5cclxuaW50ZXJmYWNlIENvdW50aW5nTnVtYmVyUHJvcHMge1xyXG4gIHZhbHVlOiBudW1iZXJcclxuICBkdXJhdGlvbj86IG51bWJlclxyXG4gIGZvcm1hdEFzQ3VycmVuY3k/OiBib29sZWFuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvdW50aW5nTnVtYmVyKHsgXHJcbiAgdmFsdWUsIFxyXG4gIGR1cmF0aW9uID0gMTAwMCwgXHJcbiAgZm9ybWF0QXNDdXJyZW5jeSA9IGZhbHNlIFxyXG59OiBDb3VudGluZ051bWJlclByb3BzKSB7XHJcbiAgY29uc3QgW2Rpc3BsYXlWYWx1ZSwgc2V0RGlzcGxheVZhbHVlXSA9IHVzZVN0YXRlKHZhbHVlKVxyXG4gIGNvbnN0IFtpc0h5ZHJhdGVkLCBzZXRJc0h5ZHJhdGVkXSA9IHVzZVN0YXRlKGZhbHNlKVxyXG5cclxuICAvLyBFbnN1cmUgY29tcG9uZW50IGlzIGh5ZHJhdGVkIG9uIGNsaWVudFxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBzZXRJc0h5ZHJhdGVkKHRydWUpXHJcbiAgfSwgW10pXHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAoIWlzSHlkcmF0ZWQpIHJldHVybjsgLy8gU2tpcCBhbmltYXRpb24gb24gc2VydmVyXHJcbiAgICAvLyBGb3Igc21vb3RoIGFuaW1hdGlvbiBhZnRlciBoeWRyYXRpb25cclxuICAgIGNvbnN0IHN0YXJ0VmFsdWUgPSBkaXNwbGF5VmFsdWU7XHJcbiAgICBjb25zdCBlbmRWYWx1ZSA9IHZhbHVlO1xyXG4gICAgY29uc3QgZGlmZmVyZW5jZSA9IGVuZFZhbHVlIC0gc3RhcnRWYWx1ZTtcclxuICAgIGlmIChNYXRoLmFicyhkaWZmZXJlbmNlKSA8IDAuMDEpIHtcclxuICAgICAgc2V0RGlzcGxheVZhbHVlKGVuZFZhbHVlKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgIGNvbnN0IHVwZGF0ZVZhbHVlID0gKCkgPT4ge1xyXG4gICAgICBjb25zdCBjdXJyZW50VGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgIGNvbnN0IGVsYXBzZWQgPSBjdXJyZW50VGltZSAtIHN0YXJ0VGltZTtcclxuICAgICAgY29uc3QgcHJvZ3Jlc3MgPSBNYXRoLm1pbihlbGFwc2VkIC8gZHVyYXRpb24sIDEpO1xyXG4gICAgICBjb25zdCBlYXNlT3V0UXVhcnQgPSAxIC0gTWF0aC5wb3coMSAtIHByb2dyZXNzLCA0KTtcclxuICAgICAgY29uc3QgY3VycmVudFZhbHVlID0gc3RhcnRWYWx1ZSArIChkaWZmZXJlbmNlICogZWFzZU91dFF1YXJ0KTtcclxuICAgICAgc2V0RGlzcGxheVZhbHVlKGN1cnJlbnRWYWx1ZSk7XHJcbiAgICAgIGlmIChwcm9ncmVzcyA8IDEpIHtcclxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodXBkYXRlVmFsdWUpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNldERpc3BsYXlWYWx1ZShlbmRWYWx1ZSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICBjb25zdCBhbmltYXRpb25JZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh1cGRhdGVWYWx1ZSk7XHJcbiAgICByZXR1cm4gKCkgPT4gY2FuY2VsQW5pbWF0aW9uRnJhbWUoYW5pbWF0aW9uSWQpO1xyXG4gIH0sIFtpc0h5ZHJhdGVkLCB2YWx1ZSwgZHVyYXRpb25dKTtcclxuXHJcbiAgY29uc3QgZm9ybWF0TnVtYmVyID0gKG51bTogbnVtYmVyKSA9PiB7XHJcbiAgICBpZiAoZm9ybWF0QXNDdXJyZW5jeSkge1xyXG4gICAgICByZXR1cm4gbmV3IEludGwuTnVtYmVyRm9ybWF0KCdlbi1VUycsIHtcclxuICAgICAgICBzdHlsZTogJ2N1cnJlbmN5JyxcclxuICAgICAgICBjdXJyZW5jeTogJ1VTRCcsXHJcbiAgICAgICAgbWluaW11bUZyYWN0aW9uRGlnaXRzOiAyLFxyXG4gICAgICAgIG1heGltdW1GcmFjdGlvbkRpZ2l0czogMlxyXG4gICAgICB9KS5mb3JtYXQobnVtKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bS50b0xvY2FsZVN0cmluZygnZW4tVVMnLCB7IFxyXG4gICAgICBtaW5pbXVtRnJhY3Rpb25EaWdpdHM6IDIsIFxyXG4gICAgICBtYXhpbXVtRnJhY3Rpb25EaWdpdHM6IDIgXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgLy8gT24gZmlyc3QgcmVuZGVyIChTU1IpLCBhbHdheXMgc2hvdyB0aGUgdmFsdWUgcHJvcCB0byBhdm9pZCBoeWRyYXRpb24gbWlzbWF0Y2hcclxuICBpZiAoIWlzSHlkcmF0ZWQpIHtcclxuICAgIHJldHVybiA8c3Bhbj57Zm9ybWF0TnVtYmVyKHZhbHVlKX08L3NwYW4+O1xyXG4gIH1cclxuICByZXR1cm4gPHNwYW4+e2Zvcm1hdE51bWJlcihkaXNwbGF5VmFsdWUpfTwvc3Bhbj47XHJcbn1cclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJDb3VudGluZ051bWJlciIsInZhbHVlIiwiZHVyYXRpb24iLCJmb3JtYXRBc0N1cnJlbmN5IiwiZGlzcGxheVZhbHVlIiwic2V0RGlzcGxheVZhbHVlIiwiaXNIeWRyYXRlZCIsInNldElzSHlkcmF0ZWQiLCJzdGFydFZhbHVlIiwiZW5kVmFsdWUiLCJkaWZmZXJlbmNlIiwiTWF0aCIsImFicyIsInN0YXJ0VGltZSIsIkRhdGUiLCJub3ciLCJ1cGRhdGVWYWx1ZSIsImN1cnJlbnRUaW1lIiwiZWxhcHNlZCIsInByb2dyZXNzIiwibWluIiwiZWFzZU91dFF1YXJ0IiwicG93IiwiY3VycmVudFZhbHVlIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiYW5pbWF0aW9uSWQiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsImZvcm1hdE51bWJlciIsIm51bSIsIkludGwiLCJOdW1iZXJGb3JtYXQiLCJzdHlsZSIsImN1cnJlbmN5IiwibWluaW11bUZyYWN0aW9uRGlnaXRzIiwibWF4aW11bUZyYWN0aW9uRGlnaXRzIiwiZm9ybWF0IiwidG9Mb2NhbGVTdHJpbmciLCJzcGFuIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/CountingNumber.tsx\n"));

/***/ })

});